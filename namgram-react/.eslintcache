[{"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx":"1","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\actions.ts":"2","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\reducer.ts":"3","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx":"4","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\chat.ts":"5","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\MessageArea.tsx":"6","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts":"7","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\SinglePost.tsx":"8","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts":"9","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\user.ts":"10","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\auth.ts":"11","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\ChatHeads.tsx":"12","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\reducer.ts":"13"},{"size":14483,"mtime":1611325587067,"results":"14","hashOfConfig":"15"},{"size":1783,"mtime":1611249950236,"results":"16","hashOfConfig":"15"},{"size":696,"mtime":1610473994493,"results":"17","hashOfConfig":"15"},{"size":14379,"mtime":1611325543165,"results":"18","hashOfConfig":"15"},{"size":529,"mtime":1611141643931,"results":"19","hashOfConfig":"15"},{"size":3746,"mtime":1611141643912,"results":"20","hashOfConfig":"15"},{"size":3487,"mtime":1611325343972,"results":"21","hashOfConfig":"15"},{"size":1196,"mtime":1611318318855,"results":"22","hashOfConfig":"15"},{"size":563,"mtime":1611141643929,"results":"23","hashOfConfig":"15"},{"size":425,"mtime":1611141643932,"results":"24","hashOfConfig":"15"},{"size":708,"mtime":1611325427288,"results":"25","hashOfConfig":"15"},{"size":2236,"mtime":1611325377484,"results":"26","hashOfConfig":"15"},{"size":1638,"mtime":1611325403043,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mizlvw",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\actions.ts",["57","58"],"import { IImage, IPost } from \"../../models/post\";\r\nimport { IUser } from \"../../models/user\";\r\nimport {\r\n  getFollowerPosts,\r\n  getPopularPosts,\r\n  getRecommendedPosts\r\n} from \"../../services/posts\";\r\nimport { SET_ERROR, START_LOADING, STOP_LOADING } from \"../ui/actions\";\r\n\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\n\r\nexport interface SetPostsAction {\r\n  type: typeof SET_POSTS;\r\n  payload: IImage[];\r\n}\r\n\r\nexport interface ClearPostsAction {\r\n  type: typeof CLEAR_POSTS;\r\n}\r\n\r\nexport type PostsActionTypes = SetPostsAction | ClearPostsAction;\r\n\r\nexport const loadPosts = (userId: string) => (dispatch: any) => {\r\n  dispatch({ type: START_LOADING });\r\n  getFollowerPosts(userId)\r\n    .then((posts) => {\r\n      dispatch({ type: SET_POSTS, payload: posts });\r\n      dispatch({ type: STOP_LOADING });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: STOP_LOADING });\r\n      dispatch({ type: SET_ERROR, payload: err });\r\n    });\r\n};\r\n\r\nexport const loadPopularPosts = (userId: string) => (dispatch: any) => {\r\n  dispatch({ type: START_LOADING });\r\n  getPopularPosts(userId)\r\n    .then((posts) => {\r\n      dispatch({ type: SET_POSTS, payload: posts });\r\n      dispatch({ type: STOP_LOADING });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: STOP_LOADING });\r\n      dispatch({ type: SET_ERROR, payload: err });\r\n    });\r\n};\r\n\r\nexport const loadRecommendedPosts = (username: string) => (dispatch: any) => {\r\n  dispatch({ type: START_LOADING });\r\n  getRecommendedPosts(username)\r\n    .then((posts) => {\r\n      dispatch({ type: SET_POSTS, payload: posts });\r\n      dispatch({ type: STOP_LOADING });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: STOP_LOADING });\r\n      dispatch({ type: SET_ERROR, payload: err });\r\n    });\r\n};",["59","60"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\reducer.ts",["61"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx",["62"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\chat.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\MessageArea.tsx",["63"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from \"@material-ui/icons/SendOutlined\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadChat, sendMessage } from \"../../redux/chat/actions\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: \"100%\",\r\n    height: \"80vh\",\r\n  },\r\n  headBG: {\r\n    backgroundColor: \"#e0e0e0\",\r\n  },\r\n  borderRight500: {\r\n    borderRight: \"1px solid #e0e0e0\",\r\n  },\r\n  messageArea: {\r\n    height: \"70vh\",\r\n    overflowY: \"auto\",\r\n  },\r\n  myMessage: {\r\n    textAlign: \"right\",\r\n  },\r\n  theirMessage: {\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n\r\nfunction MessageArea() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const auth = useSelector((state: RootState) => state.auth.auth);\r\n  const chatter = useSelector((state: RootState) => state.chat.chatter);\r\n  const messages = useSelector((state: RootState) => state.chat.messages);\r\n  const socket = useSelector((state: RootState) => state.auth.socket);\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNewMessage(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    setNewMessage(\"\");\r\n    dispatch(\r\n      sendMessage(\r\n        auth?.username as string,\r\n        chatter?.username as string,\r\n        newMessage\r\n      )\r\n    );\r\n    socket?.emit(\"chat\", {\r\n      from: auth?.username,\r\n      to: chatter?.username,\r\n      body: newMessage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth) dispatch(loadChat(auth?.username as string, username));\r\n    return () => {};\r\n  }, [auth, username]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {username && (\r\n        <Grid item xs={9}>\r\n          <List className={classes.messageArea}>\r\n            {messages.map((message, i) => (\r\n              <ListItem key={i}>\r\n                <Grid\r\n                  container\r\n                  className={\r\n                    message.myMessage ? classes.myMessage : classes.theirMessage\r\n                  }\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <ListItemText primary={message.body}></ListItemText>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <ListItemText\r\n                      secondary={moment(message.date).fromNow()}\r\n                    ></ListItemText>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <Grid container style={{ padding: \"20px\" }}>\r\n            <Grid item xs={11}>\r\n              <TextField\r\n                value={newMessage}\r\n                onChange={onChange}\r\n                label=\"Type Something\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Fab onClick={handleSendMessage} color=\"primary\" aria-label=\"add\">\r\n                <SendIcon />\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MessageArea;\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\SinglePost.tsx",["64","65"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts",["66"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\user.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\auth.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\ChatHeads.tsx",["67"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\reducer.ts",["68"],{"ruleId":"69","severity":1,"message":"70","line":1,"column":18,"nodeType":"71","messageId":"72","endLine":1,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":1,"nodeType":"80","endLine":26,"endColumn":2},{"ruleId":"69","severity":1,"message":"81","line":215,"column":9,"nodeType":"71","messageId":"72","endLine":215,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":77,"column":6,"nodeType":"84","endLine":77,"endColumn":22,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"86","line":17,"column":9,"nodeType":"71","messageId":"72","endLine":17,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":26,"column":6,"nodeType":"84","endLine":26,"endColumn":8,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":1,"nodeType":"80","endLine":21,"endColumn":3},{"ruleId":"82","severity":1,"message":"83","line":45,"column":6,"nodeType":"84","endLine":45,"endColumn":12,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"79","line":20,"column":1,"nodeType":"80","endLine":43,"endColumn":2},"@typescript-eslint/no-unused-vars","'IPost' is defined but never used.","Identifier","unusedVar","'IUser' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'handleCloseNotificationAnchor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [auth, dispatch, username]",{"range":"101","text":"102"},"Update the dependencies array to be: [dispatch, id]",{"range":"103","text":"104"},"Update the dependencies array to be: [auth, dispatch]",{"range":"105","text":"106"},[2260,2276],"[auth, dispatch, username]",[951,953],"[dispatch, id]",[1383,1389],"[auth, dispatch]"]