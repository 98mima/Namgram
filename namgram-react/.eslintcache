[{"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts":"1","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SigninForm.tsx":"2","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx":"3","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\index.tsx":"4","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\App.tsx":"5","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\actions.ts":"6","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SignupForm.tsx":"7","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx":"8","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\reducer.ts":"9","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Posts.tsx":"10","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts":"11","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\reducer.ts":"12","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\Profile.tsx":"13","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\profile.ts":"14","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\actions.ts":"15","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\home\\Home.tsx":"16"},{"size":254,"mtime":1609610860113,"results":"17","hashOfConfig":"18"},{"size":4802,"mtime":1609882830145,"results":"19","hashOfConfig":"18"},{"size":9027,"mtime":1609883540845,"results":"20","hashOfConfig":"18"},{"size":1407,"mtime":1608651812074,"results":"21","hashOfConfig":"18"},{"size":977,"mtime":1609606593465,"results":"22","hashOfConfig":"18"},{"size":3239,"mtime":1609884342533,"results":"23","hashOfConfig":"18"},{"size":6775,"mtime":1608671045334,"results":"24","hashOfConfig":"18"},{"size":4260,"mtime":1608662657795,"results":"25","hashOfConfig":"18"},{"size":524,"mtime":1608651535456,"results":"26","hashOfConfig":"18"},{"size":1210,"mtime":1609884375543,"results":"27","hashOfConfig":"18"},{"size":581,"mtime":1609605614476,"results":"28","hashOfConfig":"18"},{"size":527,"mtime":1609605537374,"results":"29","hashOfConfig":"18"},{"size":4274,"mtime":1609611981084,"results":"30","hashOfConfig":"18"},{"size":929,"mtime":1609611954972,"results":"31","hashOfConfig":"18"},{"size":1380,"mtime":1609883126342,"results":"32","hashOfConfig":"18"},{"size":149,"mtime":1609882869136,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mizlvw",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SigninForm.tsx",["77","78","79"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Container from '@material-ui/core/Container'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\n\r\nimport { ISignin } from '../../models/auth'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { START_LOADING, STOP_LOADING } from '../../redux/ui/actions'\r\nimport { RootState } from '../../redux/index'\r\nimport { signinAction } from '../../redux/auth/actions'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n      paddingTop: '10vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      background: 'rgb(255, 255, 255)',\r\n      padding: '4rem',\r\n      borderRadius: '5%'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\n\r\nfunction SigninForm() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const loading = useSelector((state: RootState) => state.ui.loading);\r\n    const error = useSelector((state: RootState) => state.ui.error);\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    \r\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n      const user: ISignin = {email, password};\r\n      dispatch(signinAction(user));\r\n    }\r\n\r\n    const onInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      if (event.currentTarget.name === \"email\") \r\n        setEmail(event.currentTarget.value);\r\n      else if (event.currentTarget.name === \"password\") \r\n        setPassword(event.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(auth) history.replace(\"/posts\");\r\n    }, [auth])\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(event) => onInput(event)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => onInput(event)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n          {loading ? <CircularProgress color=\"secondary\" /> : \"Sign in\"}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Typography color=\"error\">{error}</Typography>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        Kopirajt\r\n      </Box>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default SigninForm\r\n",["80","81"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx",["82","83","84"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\index.tsx",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\App.tsx",["85"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\actions.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SignupForm.tsx",["86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ISignup } from \"../../models/auth\";\r\nimport { START_LOADING, STOP_LOADING } from \"../../redux/ui/actions\";\r\nimport { RootState } from '../../redux/index'\r\nimport { signupAction } from '../../redux/auth/actions'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n        Namgram\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: '3rem',\r\n    paddingTop: '10vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    background: 'rgb(255, 255, 255)',\r\n    padding: '2rem',\r\n    borderRadius: '5%'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [birthday, setBirthday] = React.useState<any>(new Date());\r\n\r\n  const onBirthdayChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n   setBirthday(event.currentTarget.value);\r\n  };\r\n\r\n  const loading = useSelector((state: RootState) => state.ui.loading);\r\n  const error = useSelector((state: RootState) => state.ui.error);\r\n  const auth = useSelector((state: RootState) => state.auth.auth);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const user: ISignup = { name, lastname, username, email, password, birthday};\r\n    dispatch(signupAction(user));\r\n  }\r\n\r\n  const onInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    if (event.currentTarget.name === \"email\")\r\n      setEmail(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"password\")\r\n      setPassword(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"name\")\r\n      setName(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"lastname\")\r\n      setLastname(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"username\")\r\n      setUsername(event.currentTarget.value);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth) history.push(\"/\");\r\n  }, [auth])\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                autoComplete=\"lname\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <input type=\"date\" value={birthday} onChange={(event) => onBirthdayChange(event)}></input>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {loading ? <CircularProgress color=\"secondary\" /> : \"Sign up\"}\r\n          </Button>\r\n          <Typography color=\"error\">{error}</Typography>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React from 'react'\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Favorite from '@material-ui/icons/FavoriteBorder'\r\nimport { CardActionArea, Grid } from '@material-ui/core';\r\n\r\nimport { IPost } from '../../models/post'\r\nimport { width, maxHeight, height } from '@material-ui/system';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignContent: \"center\",\r\n      marginTop: \"5rem\",\r\n      maxHeight: \"500px\",\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n      height: 'auto',\r\n    },\r\n    imgContainer: {\r\n      width: '100%',\r\n      maxWidth: '500px',\r\n    },\r\n\r\n    levo: {\r\n      display: 'flex',\r\n      maxWidth: 'auto',\r\n      maxHeight: '100%'\r\n    },\r\n\r\n    root: {\r\n      display: 'flex',\r\n      maxWidth: '345px',\r\n      flexDirection: 'column',\r\n      width: '100%'\r\n      // marginRight: '0',\r\n      // width: \"100%\" \r\n\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Post(props: { post: IPost }) {\r\n  const { post } = props;\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.levo}>\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                <img style={{ maxHeight: '100%' }} src={post.user.image} />\r\n              </Avatar>\r\n            }\r\n            title={post.user.username}\r\n            subheader=\"September 14, 2016\"\r\n          />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n            <CardHeader\r\n              avatar={\r\n                <CardActionArea><Avatar className={classes.avatar}><Favorite /></Avatar></CardActionArea>\r\n              }\r\n              title={post.likes}\r\n            />\r\n            <CardHeader\r\n              avatar={\r\n                <CardActionArea><Avatar color=\"primary\" className={classes.avatar}><Favorite /></Avatar></CardActionArea>\r\n              }\r\n              title={post.dislikes}\r\n            />\r\n          </div>\r\n\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n              guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n          </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n\r\n          </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className={classes.imgContainer}>\r\n        <img className={classes.img} src={post.image} />\r\n      </div>\r\n    </div >\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\reducer.ts",["105"],"import { IAuth } from \"../../models/auth\"\r\nimport { AuthActionTypes, CLEAR_AUTH, SET_AUTH } from \"./actions\"\r\n\r\nexport interface AuthState{\r\n    auth: IAuth | null\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    auth: null\r\n}\r\n\r\nexport default (state = initialState, action: AuthActionTypes) => {\r\n    switch(action.type){\r\n        case SET_AUTH:\r\n            return {...state, auth: action.payload}\r\n        case CLEAR_AUTH:\r\n            return {...state, auth: null}\r\n        default:\r\n            return {...state}\r\n    }\r\n}",["106","107"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Posts.tsx",["108","109"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts",["110"],"import { IProfile } from \"../../models/user\"\r\nimport { CLEAR_PROFILE, ProfileActionTypes, SET_PROFILE } from \"./actions\"\r\n\r\nexport interface ProfileState{\r\n    profile: IProfile | undefined\r\n}\r\n\r\nconst initialState: ProfileState = {\r\n    profile: undefined\r\n}\r\n\r\nexport default (state = initialState, action: ProfileActionTypes) => {\r\n    switch(action.type){\r\n        case SET_PROFILE:\r\n            return {...state, profile: action.payload}\r\n        case CLEAR_PROFILE:\r\n            return {...state, profile: undefined}\r\n        default:\r\n            return {...state}\r\n    }\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\reducer.ts",["111"],"import { IPost } from \"../../models/post\"\r\nimport { CLEAR_POSTS, SET_POSTS, PostsActionTypes } from \"./actions\"\r\n\r\nexport interface PostsState{\r\n    posts: IPost[]\r\n}\r\n\r\nconst initialState: PostsState = {\r\n    posts: []\r\n}\r\n\r\nexport default (state = initialState, action: PostsActionTypes) => {\r\n    switch(action.type){\r\n        case SET_POSTS:\r\n            return {...state, posts: action.payload}\r\n        case CLEAR_POSTS:\r\n            return {...state, posts: []}\r\n        default:\r\n            return {...state}\r\n    }\r\n}",["112","113"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\Profile.tsx",["114","115","116","117"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadProfile } from \"../../redux/profile/actions\";\r\nimport { RootState } from \"../../redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"space-around\",\r\n    padding: \"0 5px\"\r\n  },\r\n  avatar: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n  },\r\n  loading: {\r\n    width: \"500px\",\r\n    height: \"500px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  userName: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  count: {\r\n      textAlign: \"center\",\r\n      \"&:hover\": {\r\n        backgroundColor: 'rgb(0, 0, 0, 0.1)',\r\n        cursor: \"pointer\",\r\n        borderRadius: \"5%\"\r\n      }\r\n  },\r\n  gridList: {\r\n    paddingTop: \"20px\",\r\n    width: \"100%\",\r\n    height: \"50vh\",\r\n  },\r\n}));\r\n\r\nfunction Profile() {\r\n  const { id } = useParams<{id: string}>();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((state: RootState) => state.profile.profile);\r\n  const error = useSelector((state: RootState) => state.ui.error);\r\n  const loading = useSelector((state: RootState) => state.ui.loading);\r\n  const auth = useSelector((state: RootState) => state.auth.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadProfile(id));\r\n    return () => {};\r\n  }, []);\r\n\r\n  const handleEdit = () => {\r\n    //history.push(\"/profile/edit/\" + auth?.id);\r\n  };\r\n\r\n  const checkMyProfile = () => {\r\n      if(!auth) return false;\r\n      else{\r\n          return profile?.id == auth?.id;\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      {error && <Typography>{error}</Typography>}\r\n      {loading && <CircularProgress className={classes.loading} />}\r\n      {profile && (\r\n        <Paper variant=\"outlined\" className={classes.paper}>\r\n          <div className={classes.container}>\r\n            <Avatar className={classes.avatar} src=\"https://miro.medium.com/max/10368/1*o8tTGo3vsocTKnCUyz0wHA.jpeg\"></Avatar>\r\n            <br />\r\n            <Typography variant=\"h4\">{profile.username}</Typography>\r\n            <Grid container>\r\n                <Grid className={classes.count} item xs={4}>\r\n                    <Typography>{profile?.posts.length}</Typography>\r\n                    <Typography>Posts</Typography>\r\n                </Grid>\r\n                <Grid className={classes.count} item xs={4}>\r\n                    <Typography>{profile?.followers.length}</Typography>\r\n                    <Typography>Followers</Typography>\r\n                    \r\n                </Grid>\r\n                <Grid className={classes.count} item xs={4}>\r\n                    <Typography>{profile?.following.length}</Typography>\r\n                    <Typography>Following</Typography>\r\n                </Grid> \r\n            </Grid>\r\n            {checkMyProfile() && (\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n                Izmeni profil\r\n              </Button>\r\n            )}\r\n          </div>\r\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n                {profile.posts.map((post, i) => (\r\n                    <GridListTile key={i} cols={1}>\r\n                    <img src={post.image} alt={\"DIK\"} />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\profile.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\actions.ts",["118"],"import { IProfile, IUser } from \"../../models/user\";\r\nimport { getPosts } from \"../../services/posts\";\r\nimport { getFollowers, getFollowing, getProfile } from \"../../services/profile\";\r\nimport { SET_ERROR, START_LOADING, STOP_LOADING } from \"../ui/actions\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\r\n\r\nexport interface SetProfileAction {\r\n    type: typeof SET_PROFILE,\r\n    payload: IProfile\r\n}\r\n\r\nexport interface ClearProfileAction {\r\n    type: typeof CLEAR_PROFILE\r\n}\r\n\r\nexport type ProfileActionTypes = SetProfileAction | ClearProfileAction\r\n\r\nexport const loadProfile = (userId: string) => (dispatch: any) => {\r\n    dispatch({type: START_LOADING});\r\n    Promise.all([getProfile(userId), getFollowers(userId), getFollowing(userId), getPosts(userId)])\r\n    .then(res => {\r\n        const profile: IProfile = {\r\n            ...res[0],\r\n            followers: res[1],\r\n            following: res[2],\r\n            posts: res[3]\r\n        }\r\n        //profile.posts[0].image = \"https://i.redd.it/tib5ul9c41l41.png\";\r\n        dispatch({type: SET_PROFILE, payload: profile});\r\n        dispatch({type: STOP_LOADING});\r\n    }).catch((err: AxiosError) => {\r\n        console.log(err);\r\n        dispatch({type: STOP_LOADING});\r\n        dispatch({type: SET_ERROR, payload: err.response?.data})\r\n    })\r\n};","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\home\\Home.tsx",[],{"ruleId":"119","severity":1,"message":"120","line":20,"column":10,"nodeType":"121","messageId":"122","endLine":20,"endColumn":23},{"ruleId":"119","severity":1,"message":"123","line":20,"column":25,"nodeType":"121","messageId":"122","endLine":20,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":80,"column":8,"nodeType":"126","endLine":80,"endColumn":14,"suggestions":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"132","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"133","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":221,"column":11,"nodeType":"136","endLine":223,"endColumn":145},{"ruleId":"119","severity":1,"message":"137","line":6,"column":3,"nodeType":"121","messageId":"122","endLine":6,"endColumn":7},{"ruleId":"119","severity":1,"message":"120","line":18,"column":10,"nodeType":"121","messageId":"122","endLine":18,"endColumn":23},{"ruleId":"119","severity":1,"message":"123","line":18,"column":25,"nodeType":"121","messageId":"122","endLine":18,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":103,"column":6,"nodeType":"126","endLine":103,"endColumn":12,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"139","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"140","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":17},{"ruleId":"119","severity":1,"message":"141","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":19},{"ruleId":"119","severity":1,"message":"142","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"143","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":18},{"ruleId":"119","severity":1,"message":"144","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":20},{"ruleId":"119","severity":1,"message":"145","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":17},{"ruleId":"119","severity":1,"message":"146","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":22},{"ruleId":"119","severity":1,"message":"147","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":20},{"ruleId":"119","severity":1,"message":"148","line":20,"column":26,"nodeType":"121","messageId":"122","endLine":20,"endColumn":30},{"ruleId":"119","severity":1,"message":"149","line":23,"column":10,"nodeType":"121","messageId":"122","endLine":23,"endColumn":15},{"ruleId":"119","severity":1,"message":"150","line":23,"column":17,"nodeType":"121","messageId":"122","endLine":23,"endColumn":26},{"ruleId":"119","severity":1,"message":"151","line":23,"column":28,"nodeType":"121","messageId":"122","endLine":23,"endColumn":34},{"ruleId":"119","severity":1,"message":"152","line":84,"column":9,"nodeType":"121","messageId":"122","endLine":84,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":95,"column":17,"nodeType":"136","endLine":95,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":132,"column":9,"nodeType":"136","endLine":132,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":12,"column":1,"nodeType":"155","endLine":21,"endColumn":2},{"ruleId":"128","replacedBy":"156"},{"ruleId":"130","replacedBy":"157"},{"ruleId":"119","severity":1,"message":"158","line":23,"column":11,"nodeType":"121","messageId":"122","endLine":23,"endColumn":15},{"ruleId":"124","severity":1,"message":"159","line":27,"column":8,"nodeType":"126","endLine":27,"endColumn":10,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"154","line":12,"column":1,"nodeType":"155","endLine":21,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":12,"column":1,"nodeType":"155","endLine":21,"endColumn":2},{"ruleId":"128","replacedBy":"161"},{"ruleId":"130","replacedBy":"162"},{"ruleId":"119","severity":1,"message":"163","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"164","line":63,"column":9,"nodeType":"121","messageId":"122","endLine":63,"endColumn":16},{"ruleId":"124","severity":1,"message":"165","line":74,"column":6,"nodeType":"126","endLine":74,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":83,"column":30,"nodeType":"169","messageId":"170","endLine":83,"endColumn":32},{"ruleId":"119","severity":1,"message":"171","line":1,"column":20,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'START_LOADING' is defined but never used.","Identifier","unusedVar","'STOP_LOADING' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["175"],"'clsx' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Grid' is defined but never used.","'width' is defined but never used.","'maxHeight' is defined but never used.","'height' is defined but never used.","'handleExpandClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["173"],["174"],"'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["176"],["173"],["174"],"'useState' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IUser' is defined but never used.",{"desc":"178","fix":"179"},"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [auth, history]",{"range":"185","text":"186"},{"range":"187","text":"186"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, id]",{"range":"190","text":"191"},[2725,2731],"[auth, history]",[3510,3516],[777,779],"[dispatch]",[2169,2171],"[dispatch, id]"]