[{"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\profile.ts":"1","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Posts.tsx":"2","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\App.tsx":"3","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\CreatePost.tsx":"4","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\actions.ts":"5","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts":"6","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\actions.ts":"7","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\actions.ts":"8","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\index.tsx":"9","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\reducer.ts":"10","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SigninForm.tsx":"11","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SignupForm.tsx":"12","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\Profile.tsx":"13","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\index.ts":"14","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx":"15","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\reducer.ts":"16","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\home\\Home.tsx":"17","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx":"18","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\Chat.tsx":"19","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\auth.ts":"20","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\MessageArea.tsx":"21","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\ChatHeads.tsx":"22","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts":"23","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\reducer.ts":"24","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\actions.ts":"25","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\actions.ts":"26","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\reducer.ts":"27","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\EditProfile.tsx":"28","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\user.ts":"29","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\SinglePost.tsx":"30"},{"size":1754,"mtime":1610653255524,"results":"31","hashOfConfig":"32"},{"size":1406,"mtime":1610478299387,"results":"33","hashOfConfig":"32"},{"size":1534,"mtime":1610651275169,"results":"34","hashOfConfig":"32"},{"size":3598,"mtime":1610478287428,"results":"35","hashOfConfig":"32"},{"size":1565,"mtime":1609954838381,"results":"36","hashOfConfig":"32"},{"size":2903,"mtime":1610817222200,"results":"37","hashOfConfig":"32"},{"size":4555,"mtime":1610545709509,"results":"38","hashOfConfig":"32"},{"size":926,"mtime":1610470013032,"results":"39","hashOfConfig":"32"},{"size":1407,"mtime":1608651812074,"results":"40","hashOfConfig":"32"},{"size":536,"mtime":1609952239938,"results":"41","hashOfConfig":"32"},{"size":5034,"mtime":1610474949454,"results":"42","hashOfConfig":"32"},{"size":6793,"mtime":1610475033099,"results":"43","hashOfConfig":"32"},{"size":22632,"mtime":1610659191852,"results":"44","hashOfConfig":"32"},{"size":489,"mtime":1610477980492,"results":"45","hashOfConfig":"32"},{"size":14330,"mtime":1610817157599,"results":"46","hashOfConfig":"32"},{"size":1035,"mtime":1610478207561,"results":"47","hashOfConfig":"32"},{"size":509,"mtime":1610478277785,"results":"48","hashOfConfig":"32"},{"size":11865,"mtime":1610816013755,"results":"49","hashOfConfig":"32"},{"size":646,"mtime":1609971820745,"results":"50","hashOfConfig":"32"},{"size":738,"mtime":1610542862826,"results":"51","hashOfConfig":"32"},{"size":2504,"mtime":1610476101084,"results":"52","hashOfConfig":"32"},{"size":2450,"mtime":1610492690049,"results":"53","hashOfConfig":"32"},{"size":581,"mtime":1609605614476,"results":"54","hashOfConfig":"32"},{"size":696,"mtime":1610473994493,"results":"55","hashOfConfig":"32"},{"size":596,"mtime":1610473911382,"results":"56","hashOfConfig":"32"},{"size":1269,"mtime":1610479518697,"results":"57","hashOfConfig":"32"},{"size":1146,"mtime":1610480043780,"results":"58","hashOfConfig":"32"},{"size":3578,"mtime":1610542967723,"results":"59","hashOfConfig":"32"},{"size":213,"mtime":1608664512054,"results":"60","hashOfConfig":"32"},{"size":1223,"mtime":1610652725901,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mizlvw",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\profile.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Posts.tsx",["142"],"import { CircularProgress, createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { RootState } from '../../redux';\r\nimport { loadPosts } from '../../redux/posts/actions';\r\nimport Post from './Post';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    container:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    loading: {\r\n        margin: \"20vh auto auto auto\"\r\n    }\r\n}));\r\n\r\nfunction Posts() {\r\n    const classes= useStyles();\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector((state: RootState) => state.posts.posts);\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    const socket = useSelector((state: RootState) => state.auth.socket)\r\n\r\n    useEffect(() => {\r\n        if(auth) dispatch(loadPosts(auth?.id as string));\r\n    }, [auth]);\r\n\r\n    const loading = useSelector((state: RootState) => state.ui.loading);    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.container}>\r\n                {loading && <CircularProgress size={'20vw'} className={classes.loading} />}\r\n                {posts && posts.map(post => <Post key={post.id} socket={socket as SocketIOClient.Socket} post={post} />)}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n",["143","144"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\App.tsx",["145"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\CreatePost.tsx",["146"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n//MUI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { RootState } from \"../../redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TextField, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport { SET_ERROR, START_LOADING, STOP_LOADING } from \"../../redux/ui/actions\";\r\nimport { uploadPost } from \"../../services/posts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    maxWidth: \"600px\",\r\n    padding: \"20px\",\r\n    margin: \"10vw auto 0 auto\",\r\n    height: \"50vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  form: {\r\n    \r\n  },\r\n  input: {\r\n    flex: 1,\r\n      width: \"80%\"\r\n  },\r\n  image: {\r\n    maxWidth: \"600px\",\r\n  },\r\n  btn:{\r\n    marginTop: \"3rem\",\r\n    width: \"80%\",\r\n  }\r\n}));\r\n\r\nfunction CreatePost() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [file, setFile] = useState<File>();\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    const loading = useSelector((state: RootState) => state.ui.loading);\r\n    const error = useSelector((state: RootState) => state.ui.error);\r\n\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  const onInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      event.preventDefault();\r\n    setCaption(event.currentTarget.value);\r\n  };\r\n\r\n\r\n  const onFileChange = (event: React.ChangeEvent<HTMLInputElement | HTMLInputElement>) => {\r\n    if (!event.currentTarget.files?.length) return;\r\n    const name = event.currentTarget.files[0].name;\r\n    if (name.includes(\".jpg\") || name.includes(\".png\")) {\r\n      setFile(event.currentTarget.files[0]);\r\n    } else {\r\n        dispatch({type: SET_ERROR, payload: \"Tip fajla nije podržan (podržani .jpg i .png)\"})\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (caption && file) {\r\n        dispatch({type: START_LOADING});\r\n        const id = auth?.id as string;\r\n        uploadPost({caption, image: file, personId: id}).then(res => {\r\n            dispatch({type: STOP_LOADING});\r\n            dispatch({type: SET_ERROR, payload: \"\"})\r\n            history.push(\"/\");\r\n            //Da bude redirect do slike\r\n        }).catch(err => {\r\n            dispatch({type: STOP_LOADING});\r\n            dispatch({type: SET_ERROR, payload: \"Sva polja su obavezna!\"})\r\n        })\r\n    } else {\r\n      dispatch({type: SET_ERROR, payload: \"Sva polja su obavezna!\"})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <Paper className={classes.paper}>\r\n            <Typography>Create a post</Typography>\r\n            <TextField label=\"Enter something interesting!\" placeholder=\"I'm so happy!\" onChange={onInput} className={classes.input} />\r\n            {file && <img className={classes.image} src={URL.createObjectURL(file)} />}\r\n            <input type=\"file\" name=\"file\" onChange={onFileChange} />\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.btn} type=\"submit\">{loading ? <CircularProgress /> : \"Submit\"}</Button>\r\n            <Typography color=\"error\">{error}</Typography>\r\n        \r\n      </Paper>\r\n     </form>\r\n  );\r\n}\r\n\r\nexport default CreatePost;",["147","148"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\actions.ts",["149"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\posts.ts",["150"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\actions.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\actions.ts",["151","152","153"],"import { IImage, IPost } from \"../../models/post\";\r\nimport { IUser } from \"../../models/user\";\r\nimport { getFollowerPosts, getPosts } from \"../../services/posts\";\r\nimport { SET_ERROR, START_LOADING, STOP_LOADING } from \"../ui/actions\";\r\n\r\nexport const SET_POSTS = \"SET_POSTS\"\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\"\r\n\r\nexport interface SetPostsAction {\r\n    type: typeof SET_POSTS,\r\n    payload: IImage[]\r\n}\r\n\r\nexport interface ClearPostsAction {\r\n    type: typeof CLEAR_POSTS\r\n}\r\n\r\nexport type PostsActionTypes = SetPostsAction | ClearPostsAction\r\n\r\nexport const loadPosts = (userId: string) => (dispatch: any) => {\r\n    dispatch({type: START_LOADING});\r\n    getFollowerPosts(userId).then(posts => {\r\n        dispatch({type: SET_POSTS, payload: posts});\r\n        dispatch({type: STOP_LOADING});\r\n    }).catch(err => {\r\n        dispatch({type: STOP_LOADING});\r\n        dispatch({type: SET_ERROR, payload: err})\r\n    })\r\n  };",["154","155"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\index.tsx",[],["156","157"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\posts\\reducer.ts",["158","159"],"import { IImage, IPost } from \"../../models/post\"\r\nimport { CLEAR_POSTS, SET_POSTS, PostsActionTypes } from \"./actions\"\r\n\r\nexport interface PostsState{\r\n    posts: IImage[]\r\n}\r\n\r\nconst initialState: PostsState = {\r\n    posts: []\r\n}\r\n\r\nexport default (state = initialState, action: PostsActionTypes) => {\r\n    switch(action.type){\r\n        case SET_POSTS:\r\n            return {...state, posts: action.payload}\r\n        case CLEAR_POSTS:\r\n            return {...state, posts: []}\r\n        default:\r\n            return {...state}\r\n    }\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SigninForm.tsx",["160","161","162","163","164"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Container from '@material-ui/core/Container'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\n\r\nimport { ISignin } from '../../models/auth'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { START_LOADING, STOP_LOADING } from '../../redux/ui/actions'\r\nimport { RootState } from '../../redux/index'\r\nimport { signinAction } from '../../redux/auth/actions'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n      marginTop: '3rem',\r\n      paddingTop: '10vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      background: 'rgb(255, 255, 255)',\r\n      padding: '4rem',\r\n      borderRadius: '20px'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n          Namgram\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n\r\nfunction SigninForm() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const loading = useSelector((state: RootState) => state.ui.loading);\r\n    const error = useSelector((state: RootState) => state.ui.error);\r\n    //@ts-ignore\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    \r\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n      const user: ISignin = {email, password};\r\n      dispatch(signinAction(user));\r\n    }\r\n\r\n    const onInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      if (event.currentTarget.name === \"email\") \r\n        setEmail(event.currentTarget.value);\r\n      else if (event.currentTarget.name === \"password\") \r\n        setPassword(event.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(auth) history.replace(\"/posts\");\r\n    }, [auth])\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(event) => onInput(event)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => onInput(event)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n          {loading ? <CircularProgress color=\"secondary\" /> : \"Sign in\"}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Typography color=\"error\">{error}</Typography>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        {Copyright()}\r\n      </Box>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default SigninForm\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\auth\\SignupForm.tsx",["165","166","167"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ISignup } from \"../../models/auth\";\r\nimport { START_LOADING, STOP_LOADING } from \"../../redux/ui/actions\";\r\nimport { RootState } from '../../redux/index'\r\nimport { signupAction } from '../../redux/auth/actions'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n        Namgram\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: '3rem',\r\n    paddingTop: '10vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    background: 'rgb(255, 255, 255)',\r\n    padding: '2rem',\r\n    borderRadius: '20px'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [birthday, setBirthday] = React.useState<any>(new Date());\r\n\r\n  const onBirthdayChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n   setBirthday(event.currentTarget.value);\r\n  };\r\n\r\n  const loading = useSelector((state: RootState) => state.ui.loading);\r\n  const error = useSelector((state: RootState) => state.ui.error);\r\n  //@ts-ignore\r\n  const auth = useSelector((state: RootState) => state.auth.auth);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const user: ISignup = { name, lastname, username, email, password, birthday};\r\n    dispatch(signupAction(user));\r\n  }\r\n\r\n  const onInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    if (event.currentTarget.name === \"email\")\r\n      setEmail(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"password\")\r\n      setPassword(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"name\")\r\n      setName(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"lastname\")\r\n      setLastname(event.currentTarget.value);\r\n    else if (event.currentTarget.name === \"username\")\r\n      setUsername(event.currentTarget.value);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth) history.push(\"/\");\r\n  }, [auth])\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                autoComplete=\"lname\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => onInput(event)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <input type=\"date\" value={birthday} onChange={(event) => onBirthdayChange(event)}></input>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {loading ? <CircularProgress color=\"secondary\" /> : \"Sign up\"}\r\n          </Button>\r\n          <Typography color=\"error\">{error}</Typography>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\Profile.tsx",["168","169","170","171","172"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\index.ts",[],["173","174"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\Post.tsx",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\auth\\reducer.ts",["199"],"import { IAuth } from \"../../models/auth\"\r\nimport { INotification } from \"../../models/post\"\r\nimport { AuthActionTypes, CLEAR_AUTH, CLEAR_NOTIFICATIONS, ADD_NOTIFICATION, SET_AUTH, SET_SOCKET } from \"./actions\"\r\n\r\nexport interface AuthState{\r\n    auth: IAuth | null,\r\n    socket: SocketIOClient.Socket | null,\r\n    notifications: INotification[]\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    auth: null,\r\n    socket: null,\r\n    notifications: []\r\n}\r\n\r\nexport default (state = initialState, action: AuthActionTypes) => {\r\n    switch(action.type){\r\n        case SET_AUTH:\r\n            return {...state, auth: action.payload}\r\n        case CLEAR_AUTH:\r\n            return {...state, auth: null}\r\n        case SET_SOCKET:\r\n            return {...state, socket: action.payload}\r\n        case ADD_NOTIFICATION:\r\n            return {...state, notifications: [...state.notifications, action.payload]}\r\n        case CLEAR_NOTIFICATIONS:\r\n            return {...state, notifications: []}\r\n        default:\r\n            return {...state}\r\n    }\r\n}",["200","201"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\home\\Home.tsx",["202"],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RootState } from '../../redux'\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n\r\n    useEffect(() => {\r\n        if(auth) history.push(\"/posts\");\r\n        return () => {}\r\n    }, [auth])\r\n    return (\r\n        <div>\r\n            Dobar dan\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\navigation\\Navbar.tsx",["203","204","205","206","207","208","209","210","211","212","213"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\Chat.tsx",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\auth.ts",["214"],"import axios, {AxiosError} from \"axios\"\r\n\r\nimport { ISignin, ISigninRes, ISignup, ISignupRes } from \"../models/auth\";\r\nexport async function signin(user: ISignin){\r\n    return axios.post<ISigninRes>(\"auth/login\", user).then(d => d.data);\r\n}\r\n\r\nexport async function signup(user: ISignup) {\r\n    return axios.post<ISignupRes>(\"auth/register\", user).then(d => d.data);\r\n}\r\n\r\nexport async function changeProfilePicture(userId: string, image: File) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    formData.append(\"personId\", userId);\r\n    return axios({\r\n      method: \"post\",\r\n      url: \"image/addProfilePic\",\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n  }","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\MessageArea.tsx",["215","216"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport  Divider  from '@material-ui/core/Divider';\r\nimport  Fab   from '@material-ui/core/Fab';\r\nimport  TextField  from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/SendOutlined'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: '100%',\r\n      height: '80vh'\r\n    },\r\n    headBG: {\r\n        backgroundColor: '#e0e0e0'\r\n    },\r\n    borderRight500: {\r\n        borderRight: '1px solid #e0e0e0'\r\n    },\r\n    messageArea: {\r\n      height: '70vh',\r\n      overflowY: 'auto'\r\n    }\r\n  });\r\n\r\nfunction MessageArea(props: {roomId: string}) {\r\n    const classes = useStyles();\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewMessage(event.currentTarget.value);\r\n    }\r\n\r\n    const handleSendMessage = () => {\r\n        setNewMessage(\"\");\r\n      };\r\n    \r\n    return (\r\n            <Grid item xs={9}>\r\n                <List className={classes.messageArea}>\r\n                    {/* {messages.map((message, i) => (\r\n                    <ListItem key={i}>\r\n                         <Grid container>\r\n                             <Grid item xs={12}>\r\n                                 \r\n                                 <ListItemText primary={message.body}></ListItemText>\r\n                             </Grid>\r\n                              <Grid item xs={12}>\r\n                                 <ListItemText secondary=\"09:30\"></ListItemText>\r\n                             </Grid> \r\n                         </Grid>\r\n                     </ListItem>\r\n                    ))} */}\r\n                </List>\r\n                <Divider />\r\n                <Grid container style={{padding: '20px'}}>\r\n                    <Grid item xs={11}>\r\n                        <TextField value={newMessage} onChange={onChange} label=\"Type Something\" fullWidth />\r\n                    </Grid>\r\n                    <Grid xs={1}>\r\n                        <Fab onClick={handleSendMessage} color=\"primary\" aria-label=\"add\"><SendIcon /></Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default MessageArea\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\chat\\ChatHeads.tsx",["217"],"import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux';\r\nimport { loadChatHeads } from '../../redux/chat/actions';\r\nimport {IUser} from '../../models/user'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: '100%',\r\n      height: '80vh'\r\n    },\r\n    headBG: {\r\n        backgroundColor: '#e0e0e0'\r\n    },\r\n    borderRight500: {\r\n        borderRight: '1px solid #e0e0e0'\r\n    },\r\n    messageArea: {\r\n      height: '70vh',\r\n      overflowY: 'auto'\r\n    }\r\n  });\r\n\r\nfunction ChatHeads() {\r\n    const classes = useStyles();\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    const chatHeads = useSelector((state: RootState) => state.chat.chatHeads);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(auth) dispatch(loadChatHeads(auth.username));\r\n        return () => {\r\n        }\r\n    }, [auth])\r\n\r\n    return (\r\n            <Grid item xs={3} className={classes.borderRight500}>\r\n\r\n                <Divider />\r\n                <Grid item xs={12} style={{padding: '10px'}}>\r\n                    <TextField id=\"outlined-basic-email\" label=\"Search\" variant=\"outlined\" fullWidth />\r\n                </Grid>\r\n                <Divider />\r\n                <List>\r\n                    {chatHeads && chatHeads.map((user: IUser) => \r\n                        <ListItem button key={user.id}>\r\n                            <ListItemIcon>\r\n                                <Avatar alt=\"Remy Sharp\" src={user.profilePic} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={`${user.name} ${user.lastname}`}>Remy Sharp</ListItemText>\r\n                            <ListItemText secondary={user.username}></ListItemText>\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default ChatHeads\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\profile\\reducer.ts",["218"],"import { IProfile } from \"../../models/user\"\r\nimport { CLEAR_PROFILE, ProfileActionTypes, SET_PROFILE } from \"./actions\"\r\n\r\nexport interface ProfileState{\r\n    profile: IProfile | undefined\r\n}\r\n\r\nconst initialState: ProfileState = {\r\n    profile: undefined\r\n}\r\n\r\nexport default (state = initialState, action: ProfileActionTypes) => {\r\n    switch(action.type){\r\n        case SET_PROFILE:\r\n            return {...state, profile: action.payload}\r\n        case CLEAR_PROFILE:\r\n            return {...state, profile: undefined}\r\n        default:\r\n            return {...state}\r\n    }\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\reducer.ts",["219"],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\ui\\actions.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\actions.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\redux\\chat\\reducer.ts",["220","221","222"],"import { IAuth } from \"../../models/auth\"\r\nimport { IChat, IMessage } from \"../../models/chat\"\r\nimport { IUser } from \"../../models/user\"\r\nimport { ChatActionTypes, SET_CHAT_HEADS, CLEAR_CHAT_HEADS, NEW_MESSAGE, CLEAR_NEW_MESSAGES } from \"./actions\"\r\n\r\n\r\nexport interface ChatState{\r\n    chatHeads: IUser[],\r\n    chat: IChat | undefined,\r\n    chatNotifications: number\r\n}\r\n\r\nconst initialState: ChatState = {\r\n    chatHeads: [],\r\n    chat: undefined,\r\n     chatNotifications: 0\r\n}\r\n\r\nexport default (state = initialState, action: ChatActionTypes) => {\r\n    switch(action.type){\r\n        case SET_CHAT_HEADS:\r\n            return {...state, chatHeads: action.payload}\r\n        case CLEAR_CHAT_HEADS:\r\n            return {...state, chatHeads: []}\r\n        case NEW_MESSAGE:\r\n            return {...state, chatNotifications: state.chatNotifications + 1, \r\n                chat: {chatter: (state.chat as IChat).chatter, \r\n                    messages: [...(state.chat as IChat).messages, action.payload]}}\r\n        case CLEAR_NEW_MESSAGES:\r\n            return {...state, chatNotifications: 0}\r\n        default:\r\n            return {...state}\r\n    }\r\n}","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\profile\\EditProfile.tsx",["223"],"import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../redux';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from '@material-ui/core/Paper/Paper';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport { SET_ERROR, START_LOADING, STOP_LOADING } from '../../redux/ui/actions';\r\nimport Avatar from '@material-ui/core/Avatar/Avatar';\r\nimport { changeProfilePicture } from '../../services/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      maxWidth: \"600px\",\r\n      padding: \"20px\",\r\n      margin: \"10vw auto 0 auto\",\r\n      height: \"50vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\"\r\n    },\r\n    form: {\r\n      \r\n    },\r\n    input: {\r\n      flex: 1,\r\n        width: \"80%\"\r\n    },\r\n    image: {\r\n      maxWidth: \"600px\",\r\n    },\r\n    btn:{\r\n      marginTop: \"3rem\",\r\n      width: \"80%\",\r\n    },\r\n    avatar: {\r\n        width: \"200px\",\r\n        height: \"200px\",\r\n      },\r\n  }));\r\n\r\nfunction EditProfile() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [file, setFile] = useState<File>();\r\n    const auth = useSelector((state: RootState) => state.auth.auth);\r\n    const loading = useSelector((state: RootState) => state.ui.loading);\r\n    const error = useSelector((state: RootState) => state.ui.error);\r\n\r\n    \r\n  const onFileChange = (event: React.ChangeEvent<HTMLInputElement | HTMLInputElement>) => {\r\n    if (!event.currentTarget.files?.length) return;\r\n    const name = event.currentTarget.files[0].name;\r\n    if (name.includes(\".jpg\") || name.includes(\".png\")) {\r\n      setFile(event.currentTarget.files[0]);\r\n    } else {\r\n        dispatch({type: SET_ERROR, payload: \"Tip fajla nije podržan (podržani .jpg i .png)\"})\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (file) {\r\n        dispatch({type: START_LOADING});\r\n        const id = auth?.id as string;\r\n        changeProfilePicture(id, file).then(res => {\r\n            dispatch({type: STOP_LOADING});\r\n            dispatch({type: SET_ERROR, payload: \"\"})\r\n            history.push(\"/profile/\" + id);\r\n            //Da bude redirect do slike\r\n        }).catch(err => {\r\n            dispatch({type: STOP_LOADING});\r\n            dispatch({type: SET_ERROR, payload: \"Sva polja su obavezna!\"})\r\n        })\r\n    } else {\r\n      dispatch({type: SET_ERROR, payload: \"Sva polja su obavezna!\"})\r\n    }\r\n  };\r\n    \r\n    return (\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <Paper className={classes.paper}>\r\n            <Typography>Change your profile picture</Typography>\r\n            {file && <Avatar\r\n              className={classes.avatar}\r\n              src={URL.createObjectURL(file)}\r\n            ></Avatar>}\r\n            <input type=\"file\" name=\"file\" onChange={onFileChange} />\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.btn} type=\"submit\">{loading ? <CircularProgress /> : \"Submit\"}</Button>\r\n            <Typography color=\"error\">{error}</Typography>\r\n        \r\n      </Paper>\r\n     </form>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\services\\user.ts",[],"C:\\Users\\zlatk\\Desktop\\namgram\\namgram-react\\src\\components\\posts\\SinglePost.tsx",["224","225"],{"ruleId":"226","severity":1,"message":"227","line":28,"column":8,"nodeType":"228","endLine":28,"endColumn":14,"suggestions":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":6,"column":3,"nodeType":"236","messageId":"237","endLine":6,"endColumn":7},{"ruleId":"238","severity":1,"message":"239","line":97,"column":22,"nodeType":"240","endLine":97,"endColumn":87},{"ruleId":"230","replacedBy":"241"},{"ruleId":"232","replacedBy":"242"},{"ruleId":"234","severity":1,"message":"243","line":1,"column":20,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"244","line":2,"column":28,"nodeType":"236","messageId":"237","endLine":2,"endColumn":33},{"ruleId":"234","severity":1,"message":"244","line":1,"column":18,"nodeType":"236","messageId":"237","endLine":1,"endColumn":23},{"ruleId":"234","severity":1,"message":"243","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":15},{"ruleId":"234","severity":1,"message":"245","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":36},{"ruleId":"230","replacedBy":"246"},{"ruleId":"232","replacedBy":"247"},{"ruleId":"230","replacedBy":"248"},{"ruleId":"232","replacedBy":"249"},{"ruleId":"234","severity":1,"message":"244","line":1,"column":18,"nodeType":"236","messageId":"237","endLine":1,"endColumn":23},{"ruleId":"250","severity":1,"message":"251","line":12,"column":1,"nodeType":"252","endLine":21,"endColumn":2},{"ruleId":"234","severity":1,"message":"253","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":16},{"ruleId":"234","severity":1,"message":"254","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":24},{"ruleId":"234","severity":1,"message":"255","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":23},{"ruleId":"234","severity":1,"message":"256","line":20,"column":25,"nodeType":"236","messageId":"237","endLine":20,"endColumn":37},{"ruleId":"226","severity":1,"message":"257","line":93,"column":8,"nodeType":"228","endLine":93,"endColumn":14,"suggestions":"258"},{"ruleId":"234","severity":1,"message":"255","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":23},{"ruleId":"234","severity":1,"message":"256","line":18,"column":25,"nodeType":"236","messageId":"237","endLine":18,"endColumn":37},{"ruleId":"226","severity":1,"message":"257","line":104,"column":6,"nodeType":"228","endLine":104,"endColumn":12,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"227","line":120,"column":6,"nodeType":"228","endLine":120,"endColumn":25,"suggestions":"260"},{"ruleId":"234","severity":1,"message":"261","line":122,"column":9,"nodeType":"236","messageId":"237","endLine":122,"endColumn":18},{"ruleId":"234","severity":1,"message":"262","line":131,"column":9,"nodeType":"236","messageId":"237","endLine":131,"endColumn":19},{"ruleId":"234","severity":1,"message":"263","line":147,"column":9,"nodeType":"236","messageId":"237","endLine":147,"endColumn":14},{"ruleId":"234","severity":1,"message":"264","line":150,"column":9,"nodeType":"236","messageId":"237","endLine":150,"endColumn":31},{"ruleId":"230","replacedBy":"265"},{"ruleId":"232","replacedBy":"266"},{"ruleId":"234","severity":1,"message":"267","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":12},{"ruleId":"234","severity":1,"message":"268","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":17},{"ruleId":"234","severity":1,"message":"269","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":19},{"ruleId":"234","severity":1,"message":"270","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":16},{"ruleId":"234","severity":1,"message":"271","line":13,"column":8,"nodeType":"236","messageId":"237","endLine":13,"endColumn":18},{"ruleId":"234","severity":1,"message":"272","line":15,"column":8,"nodeType":"236","messageId":"237","endLine":15,"endColumn":20},{"ruleId":"234","severity":1,"message":"273","line":16,"column":8,"nodeType":"236","messageId":"237","endLine":16,"endColumn":17},{"ruleId":"234","severity":1,"message":"274","line":17,"column":8,"nodeType":"236","messageId":"237","endLine":17,"endColumn":22},{"ruleId":"234","severity":1,"message":"275","line":18,"column":8,"nodeType":"236","messageId":"237","endLine":18,"endColumn":20},{"ruleId":"234","severity":1,"message":"276","line":24,"column":3,"nodeType":"236","messageId":"237","endLine":24,"endColumn":19},{"ruleId":"234","severity":1,"message":"277","line":31,"column":3,"nodeType":"236","messageId":"237","endLine":31,"endColumn":7},{"ruleId":"234","severity":1,"message":"235","line":32,"column":3,"nodeType":"236","messageId":"237","endLine":32,"endColumn":7},{"ruleId":"234","severity":1,"message":"278","line":39,"column":10,"nodeType":"236","messageId":"237","endLine":39,"endColumn":15},{"ruleId":"234","severity":1,"message":"279","line":39,"column":17,"nodeType":"236","messageId":"237","endLine":39,"endColumn":26},{"ruleId":"234","severity":1,"message":"280","line":39,"column":28,"nodeType":"236","messageId":"237","endLine":39,"endColumn":34},{"ruleId":"234","severity":1,"message":"281","line":60,"column":10,"nodeType":"236","messageId":"237","endLine":60,"endColumn":16},{"ruleId":"234","severity":1,"message":"282","line":61,"column":10,"nodeType":"236","messageId":"237","endLine":61,"endColumn":26},{"ruleId":"234","severity":1,"message":"283","line":63,"column":10,"nodeType":"236","messageId":"237","endLine":63,"endColumn":15},{"ruleId":"234","severity":1,"message":"284","line":168,"column":9,"nodeType":"236","messageId":"237","endLine":168,"endColumn":17},{"ruleId":"234","severity":1,"message":"285","line":172,"column":9,"nodeType":"236","messageId":"237","endLine":172,"endColumn":16},{"ruleId":"226","severity":1,"message":"286","line":201,"column":6,"nodeType":"228","endLine":201,"endColumn":8,"suggestions":"287"},{"ruleId":"234","severity":1,"message":"288","line":254,"column":9,"nodeType":"236","messageId":"237","endLine":254,"endColumn":26},{"ruleId":"289","severity":1,"message":"290","line":427,"column":21,"nodeType":"291","messageId":"292","endLine":427,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":468,"column":9,"nodeType":"240","endLine":468,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":17,"column":1,"nodeType":"252","endLine":32,"endColumn":2},{"ruleId":"230","replacedBy":"293"},{"ruleId":"232","replacedBy":"294"},{"ruleId":"226","severity":1,"message":"257","line":13,"column":8,"nodeType":"228","endLine":13,"endColumn":14,"suggestions":"295"},{"ruleId":"234","severity":1,"message":"296","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"297","line":15,"column":8,"nodeType":"236","messageId":"237","endLine":15,"endColumn":18},{"ruleId":"234","severity":1,"message":"298","line":16,"column":8,"nodeType":"236","messageId":"237","endLine":16,"endColumn":17},{"ruleId":"234","severity":1,"message":"299","line":22,"column":8,"nodeType":"236","messageId":"237","endLine":22,"endColumn":18},{"ruleId":"234","severity":1,"message":"300","line":27,"column":8,"nodeType":"236","messageId":"237","endLine":27,"endColumn":22},{"ruleId":"234","severity":1,"message":"301","line":32,"column":28,"nodeType":"236","messageId":"237","endLine":32,"endColumn":49},{"ruleId":"234","severity":1,"message":"302","line":33,"column":10,"nodeType":"236","messageId":"237","endLine":33,"endColumn":23},{"ruleId":"234","severity":1,"message":"303","line":38,"column":8,"nodeType":"236","messageId":"237","endLine":38,"endColumn":9},{"ruleId":"234","severity":1,"message":"304","line":129,"column":9,"nodeType":"236","messageId":"237","endLine":129,"endColumn":15},{"ruleId":"234","severity":1,"message":"305","line":173,"column":9,"nodeType":"236","messageId":"237","endLine":173,"endColumn":19},{"ruleId":"238","severity":1,"message":"239","line":254,"column":13,"nodeType":"240","endLine":257,"endColumn":15},{"ruleId":"234","severity":1,"message":"306","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"307","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":16},{"ruleId":"234","severity":1,"message":"308","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":46,"column":8,"nodeType":"228","endLine":46,"endColumn":14,"suggestions":"309"},{"ruleId":"250","severity":1,"message":"251","line":12,"column":1,"nodeType":"252","endLine":21,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":13,"column":1,"nodeType":"252","endLine":26,"endColumn":2},{"ruleId":"234","severity":1,"message":"283","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":15},{"ruleId":"234","severity":1,"message":"310","line":2,"column":17,"nodeType":"236","messageId":"237","endLine":2,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":19,"column":1,"nodeType":"252","endLine":34,"endColumn":2},{"ruleId":"234","severity":1,"message":"311","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":17},{"ruleId":"234","severity":1,"message":"285","line":17,"column":11,"nodeType":"236","messageId":"237","endLine":17,"endColumn":18},{"ruleId":"226","severity":1,"message":"312","line":27,"column":8,"nodeType":"228","endLine":27,"endColumn":10,"suggestions":"313"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["314"],"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["315"],["316"],"'IUser' is defined but never used.","'IPost' is defined but never used.","'getPosts' is defined but never used.",["315"],["316"],["315"],["316"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'START_LOADING' is defined but never used.","'STOP_LOADING' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["317"],["318"],["319"],"'following' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'visit' is assigned a value but never used.","'handleUnFollowFromList' is assigned a value but never used.",["315"],["316"],"'clsx' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'CircularProgress' is defined but never used.","'Grid' is defined but never used.","'width' is defined but never used.","'maxHeight' is defined but never used.","'height' is defined but never used.","'Socket' is defined but never used.","'ADD_NOTIFICATION' is defined but never used.","'IAuth' is defined but never used.","'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.post.dislikes', 'props.post.ifDisliked', 'props.post.ifLiked', and 'props.post.likes'. Either include them or remove the dependency array. If 'setAlreadyLiked' needs the current value of 'props.post.ifLiked', you can also switch to useReducer instead of useState and read 'props.post.ifLiked' in the reducer.",["320"],"'handleExpandClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["315"],["316"],["321"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'LocationDisabledSharp' is defined but never used.","'DebounceInput' is defined but never used.","'_' is defined but never used.","'socket' is assigned a value but never used.","'handleHome' is assigned a value but never used.","'AxiosError' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.",["322"],"'IMessage' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the depen